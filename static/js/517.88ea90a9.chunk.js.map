{"version":3,"file":"static/js/517.88ea90a9.chunk.js","mappings":"wRAEaA,EAAYC,EAAAA,EAAAA,GAAH,sBAETC,EAAQD,EAAAA,EAAAA,EAAH,4CAILE,EAAWF,EAAAA,EAAAA,IAAH,qEAKRG,EAAYH,EAAAA,EAAAA,GAAH,wD,SC8BtB,EAtCa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,IAAUP,GAFjB,gBAERQ,EAFQ,EAERA,KACRJ,EAAUI,GAHM,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,GACD,GAAE,CAACN,KAGF,SAACL,EAAD,UACGQ,EAAOQ,OAAS,EACfR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAiBC,GAA/B,EAAoBC,UAApB,EAA+BD,cAA/B,OACT,UAAChB,EAAD,YACE,SAACD,EAAD,CACEmB,IACEF,EAAY,yCAC0BA,GAD1B,mEAIdG,IAAKJ,KAEP,SAACjB,EAAD,UAAQiB,MATMD,EADP,KAcX,8DAIP,C,mMCxCKM,EAAW,+BACXC,EAAU,mCAEHC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFrB,cACjBG,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qDAQTC,EAAS,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,oBACcN,IAFd,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTjB,EAAS,mCAAG,WAAMmB,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BACsBN,IAFtB,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTG,EAAU,mCAAG,WAAMD,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BACsBN,IAFrB,cAClBG,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVI,EAAe,mCAAG,WAAOd,GAAP,4FAAae,EAAb,+BAAoB,EAApB,SACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCN,EADhC,iBAC6Ce,EAD7C,yBADM,cACvBN,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/cast/Cast.styled.js","components/cast/Cast.js","servises/getFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListCasts = styled.ul``;\n\nexport const Actor = styled.p`\n  font-size: 20px;\n`;\n\nexport const ActorImg = styled.img`\n  max-width: 200px;\n  margin-bottom: 20px;\n`;\n\nexport const ActorItem = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'servises/getFilms';\nimport { Actor, ListCasts, ActorImg, ActorItem } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const { cast } = await getActors(movieId);\n        setActors(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <ListCasts>\n      {actors.length > 0 ? (\n        actors.map(({ credit_id, name, character, profile_path }) => (\n          <ActorItem key={credit_id}>\n            <ActorImg\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : `https://slemz.com.ua/image/cache/webp/Flanec-ru10.-1200x800.webp`\n              }\n              alt={name}\n            />\n            <Actor>{name}</Actor>\n          </ActorItem>\n        ))\n      ) : (\n        <p>Sorry, we have not any infomation</p>\n      )}\n    </ListCasts>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7365af2a22cee957c4f845cc26521213';\n\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getIdInfo = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getActors = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieForName = async (name, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n"],"names":["ListCasts","styled","Actor","ActorImg","ActorItem","movieId","useParams","useState","actors","setActors","useEffect","fetchActors","getActors","cast","console","log","length","map","credit_id","name","profile_path","character","src","alt","BASE_URL","API_KEY","getMovies","axios","response","data","getIdInfo","id","getReviews","getMovieForName","page"],"sourceRoot":""}