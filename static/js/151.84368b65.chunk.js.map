{"version":3,"file":"static/js/151.84368b65.chunk.js","mappings":"wQAEaA,E,QAAQC,EAAAA,EAAH,2D,SCmClB,EAhCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAWP,GAFpB,gBAETQ,EAFS,EAETA,QACRJ,EAASI,GAHQ,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACN,KAGF,wBACGG,EAAMQ,OAAS,EACdR,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADD,KAOV,SAACf,EAAD,6DAIP,C,mMCjCKkB,EAAW,+BACXC,EAAU,mCAEHC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFrB,cACjBG,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qDAQTC,EAAS,mCAAG,WAAMT,GAAN,uFACAM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,IAFd,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTE,EAAS,mCAAG,WAAMV,GAAN,uFACAM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,IAFtB,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTd,EAAU,mCAAG,WAAMM,GAAN,uFACDM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,IAFrB,cAClBG,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCQ,EADhC,yBADM,cACvBL,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/reviews/Reviews.styled.js","components/reviews/Reviews.js","servises/getFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Sorry = styled.p`\n  font-size: 20px;\n  color: red;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'servises/getFilms';\nimport { Sorry } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await getReviews(movieId);\n        setArray(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {array.length > 0 ? (\n        array.map(({ id, author, content }) => (\n          <li key={id}>\n            <b>{author}</b>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <Sorry>Sorry, we have not any reviews for this movie</Sorry>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7365af2a22cee957c4f845cc26521213';\n\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getIdInfo = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getActors = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieForName = async name => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}&include_adult=false`\n  );\n  return response.data;\n};\n"],"names":["Sorry","styled","movieId","useParams","useState","array","setArray","useEffect","fetchReviews","getReviews","results","console","log","length","map","id","author","content","BASE_URL","API_KEY","getMovies","axios","response","data","getIdInfo","getActors","getMovieForName","name"],"sourceRoot":""}